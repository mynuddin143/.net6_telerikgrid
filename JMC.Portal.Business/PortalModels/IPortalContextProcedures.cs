// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using JMC.Portal.Business.PortalModels;

namespace JMC.Portal.Business.PortalModels
{
    public partial interface IPortalContextProcedures
    {
        Task<List<FixFKConstraintsResult>> FixFKConstraintsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBacklogResult>> GetBacklogAsync(long? sapSoldToID, long? sapShipToID, long? sapSalesOrganizationID, long? sapSalesOfficeID, long? sapCustomerGroupID, long? sapSalesGroupID, long? userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBacklogDetailResult>> GetBacklogDetailAsync(long? sapSoldToID, long? sapShipToID, long? plantID, long? sapSalesOrganizationID, long? sapSalesOfficeID, long? sapCustomerGroupID, long? sapSalesGroupID, long? userID, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBacklogDetail1Result>> GetBacklogDetail1Async(long? sapSoldToID, long? sapShipToID, long? plantID, long? sapSalesOrganizationID, long? sapSalesOfficeID, long? sapCustomerGroupID, long? sapSalesGroupID, long? userID, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBacklogDetailoldResult>> GetBacklogDetailoldAsync(long? sapSoldToID, long? sapShipToID, long? plantID, long? sapSalesOrganizationID, long? sapSalesOfficeID, long? sapCustomerGroupID, long? sapSalesGroupID, long? userID, string status, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDeliveryNumbersResult>> GetDeliveryNumbersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSAPMaterialPricingResult>> GetSAPMaterialPricingAsync(long? soldToId, long? sapTubeShapeId, DateTime? today, decimal? guageId, long? materialId, decimal? size, decimal? size2, decimal? diameter, long? plantid, string materialCode, string grade, bool? includeOTS, bool? secondary, int? excessPrimeDays, string NPSShape, long? shipToId, string materialIds, OutputParameter<string> ErrorMessage, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSAPStockResult>> GetSAPStockAsync(long? userID, long? sapTubeShapeID, decimal? size1, decimal? size2, decimal? diameter, long? plantID, string gaugeCharacteristicCode, decimal? gauge, string grade, bool? includeOTS, bool? secondary, bool? includeExcess, int? excessPrimeDays, DateTime? today, string NPSShape, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSAPStock_1Result>> GetSAPStock_1Async(long? userID, long? sapTubeShapeID, decimal? size1, decimal? size2, decimal? diameter, long? plantID, string gaugeCharacteristicCode, decimal? gauge, string grade, bool? includeOTS, bool? secondary, bool? includeExcess, int? excessPrimeDays, DateTime? today, string NPSShape, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PortalUsageResult>> PortalUsageAsync(string flgpotal, long? userID, long? SAPSoldtoID, DateTime? FromDate, DateTime? ToDate, string RecordSource, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PortalUsageDetailResult>> PortalUsageDetailAsync(string flgpotal, long? userID, long? SAPSoldtoID, DateTime? FromDate, DateTime? ToDate, string RecordSource, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TEMPSPAsync(string DataView, string FieldName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
