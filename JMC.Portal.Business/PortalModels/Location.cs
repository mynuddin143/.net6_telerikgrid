// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("Location")]
    public partial class Location
    {
        public Location()
        {
            Employees = new HashSet<Employee>();
            PhoneNumbers = new HashSet<PhoneNumber>();
            PlantComputers = new HashSet<PlantComputer>();
            RandomLengthSapsoldTos = new HashSet<RandomLengthSapsoldTo>();
            ScrapSapsoldTos = new HashSet<ScrapSapsoldTo>();
        }

        [Key]
        [Column("LocationID")]
        public long LocationId { get; set; }
        [Required]
        [StringLength(50)]
        public string Name { get; set; }
        [Column("CityID")]
        public long CityId { get; set; }
        [Required]
        [StringLength(150)]
        public string Address { get; set; }
        [Required]
        [StringLength(10)]
        public string PostalCode { get; set; }
        [Required]
        [StringLength(25)]
        public string PhoneNumber { get; set; }
        [StringLength(25)]
        public string TollFreePhoneNumber { get; set; }
        [StringLength(25)]
        public string FaxNumber { get; set; }
        [Required]
        public bool? Active { get; set; }
        [Column("DivisionID")]
        public long DivisionId { get; set; }
        [Column("ADName")]
        [StringLength(50)]
        public string Adname { get; set; }

        [ForeignKey(nameof(CityId))]
        [InverseProperty("Locations")]
        public virtual City City { get; set; }
        [ForeignKey(nameof(DivisionId))]
        [InverseProperty("Locations")]
        public virtual Division Division { get; set; }
        [InverseProperty("Location")]
        public virtual Plant Plant { get; set; }
        [InverseProperty(nameof(Employee.Location))]
        public virtual ICollection<Employee> Employees { get; set; }
        [InverseProperty("Location")]
        public virtual ICollection<PhoneNumber> PhoneNumbers { get; set; }
        [InverseProperty(nameof(PlantComputer.Location))]
        public virtual ICollection<PlantComputer> PlantComputers { get; set; }
        [InverseProperty(nameof(RandomLengthSapsoldTo.Location))]
        public virtual ICollection<RandomLengthSapsoldTo> RandomLengthSapsoldTos { get; set; }
        [InverseProperty(nameof(ScrapSapsoldTo.Location))]
        public virtual ICollection<ScrapSapsoldTo> ScrapSapsoldTos { get; set; }
    }
}