// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("Quote")]
    public partial class Quote
    {
        public Quote()
        {
            QuoteMaterials = new HashSet<QuoteMaterial>();
            QuoteSapconditions = new HashSet<QuoteSapcondition>();
            QuoteStatusChanges = new HashSet<QuoteStatusChange>();
            SapsalesOrders = new HashSet<SapsalesOrder>();
        }

        [Key]
        [Column("QuoteID")]
        public long QuoteId { get; set; }
        [Column("DivisionID")]
        public long DivisionId { get; set; }
        [StringLength(50)]
        public string Name { get; set; }
        [StringLength(50)]
        public string Attention { get; set; }
        [Column("SAPSoldToID")]
        public long SapsoldToId { get; set; }
        [Column("SAPShipToID")]
        public long? SapshipToId { get; set; }
        [Column("ProductionPlantID")]
        public long? ProductionPlantId { get; set; }
        [Column("EmployeeID")]
        public long EmployeeId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Date { get; set; }
        public int? CustomerCreditLimit { get; set; }
        public int? CustomerCreditExposure { get; set; }
        public bool Locked { get; set; }
        [StringLength(2000)]
        public string Comments { get; set; }
        [Column("LastUpdatedFromSAP", TypeName = "datetime")]
        public DateTime? LastUpdatedFromSap { get; set; }
        [Column("RegionSAPConditionGroupID")]
        public long? RegionSapconditionGroupId { get; set; }
        [Column("TierSAPConditionGroupID")]
        public long? TierSapconditionGroupId { get; set; }
        [StringLength(3)]
        public string Currency { get; set; }
        [StringLength(50)]
        public string NewCustomerName { get; set; }
        public bool? DownloadPricing { get; set; }
        public bool? DownloadStock { get; set; }
        public bool? DownloadRollings { get; set; }
        [StringLength(28)]
        public string IncoTerms2 { get; set; }
        [Column("FreightIndicatorSAPConditionGroupID")]
        public long? FreightIndicatorSapconditionGroupId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? PromiseDate { get; set; }
        [Column("PONumber")]
        [StringLength(50)]
        public string Ponumber { get; set; }

        [ForeignKey(nameof(DivisionId))]
        [InverseProperty("Quotes")]
        public virtual Division Division { get; set; }
        [ForeignKey(nameof(EmployeeId))]
        [InverseProperty("Quotes")]
        public virtual Employee Employee { get; set; }
        [ForeignKey(nameof(FreightIndicatorSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.QuoteFreightIndicatorSapconditionGroups))]
        public virtual SapconditionGroup FreightIndicatorSapconditionGroup { get; set; }
        [ForeignKey(nameof(ProductionPlantId))]
        [InverseProperty(nameof(Plant.Quotes))]
        public virtual Plant ProductionPlant { get; set; }
        [ForeignKey(nameof(RegionSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.QuoteRegionSapconditionGroups))]
        public virtual SapconditionGroup RegionSapconditionGroup { get; set; }
        [ForeignKey(nameof(SapshipToId))]
        [InverseProperty("Quotes")]
        public virtual SapshipTo SapshipTo { get; set; }
        [ForeignKey(nameof(SapsoldToId))]
        [InverseProperty("Quotes")]
        public virtual SapsoldTo SapsoldTo { get; set; }
        [ForeignKey(nameof(TierSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.QuoteTierSapconditionGroups))]
        public virtual SapconditionGroup TierSapconditionGroup { get; set; }
        [InverseProperty(nameof(QuoteMaterial.Quote))]
        public virtual ICollection<QuoteMaterial> QuoteMaterials { get; set; }
        [InverseProperty(nameof(QuoteSapcondition.Quote))]
        public virtual ICollection<QuoteSapcondition> QuoteSapconditions { get; set; }
        [InverseProperty(nameof(QuoteStatusChange.Quote))]
        public virtual ICollection<QuoteStatusChange> QuoteStatusChanges { get; set; }
        [InverseProperty(nameof(SapsalesOrder.Quote))]
        public virtual ICollection<SapsalesOrder> SapsalesOrders { get; set; }
    }
}