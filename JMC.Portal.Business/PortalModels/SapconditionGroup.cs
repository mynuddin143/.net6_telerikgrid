// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("SAPConditionGroup")]
    [Microsoft.EntityFrameworkCore.Index(nameof(Sapcode), Name = "IX_SAPConditionGroup", IsUnique = true)]
    public partial class SapconditionGroup
    {
        public SapconditionGroup()
        {
            Plants = new HashSet<Plant>();
            PriceChangeRequestRegionSapconditionGroups = new HashSet<PriceChangeRequest>();
            PriceChangeRequestTierSapconditionGroups = new HashSet<PriceChangeRequest>();
            PriceSheetNotes = new HashSet<PriceSheetNote>();
            QuoteFreightIndicatorSapconditionGroups = new HashSet<Quote>();
            QuoteRegionSapconditionGroups = new HashSet<Quote>();
            QuoteTierSapconditionGroups = new HashSet<Quote>();
            SapshipToFreightIndicatorSapconditionGroups = new HashSet<SapshipTo>();
            SapshipToFuelSurchargeSapconditionGroups = new HashSet<SapshipTo>();
            SapsoldToHomeMillSapconditionGroups = new HashSet<SapsoldTo>();
            SapsoldToRegionSapconditionGroups = new HashSet<SapsoldTo>();
            SapsoldToTierSapconditionGroups = new HashSet<SapsoldTo>();
        }

        [Key]
        [Column("SAPConditionGroupID")]
        public long SapconditionGroupId { get; set; }
        [Column("DivisionID")]
        public long DivisionId { get; set; }
        [Required]
        [StringLength(50)]
        public string Name { get; set; }
        [Required]
        [Column("SAPCode")]
        [StringLength(50)]
        public string Sapcode { get; set; }

        [ForeignKey(nameof(DivisionId))]
        [InverseProperty("SapconditionGroups")]
        public virtual Division Division { get; set; }
        [InverseProperty(nameof(Plant.HomeMillSapconditionGroup))]
        public virtual ICollection<Plant> Plants { get; set; }
        [InverseProperty(nameof(PriceChangeRequest.RegionSapconditionGroup))]
        public virtual ICollection<PriceChangeRequest> PriceChangeRequestRegionSapconditionGroups { get; set; }
        [InverseProperty(nameof(PriceChangeRequest.TierSapconditionGroup))]
        public virtual ICollection<PriceChangeRequest> PriceChangeRequestTierSapconditionGroups { get; set; }
        [InverseProperty(nameof(PriceSheetNote.RegionSapconditionGroup))]
        public virtual ICollection<PriceSheetNote> PriceSheetNotes { get; set; }
        [InverseProperty(nameof(Quote.FreightIndicatorSapconditionGroup))]
        public virtual ICollection<Quote> QuoteFreightIndicatorSapconditionGroups { get; set; }
        [InverseProperty(nameof(Quote.RegionSapconditionGroup))]
        public virtual ICollection<Quote> QuoteRegionSapconditionGroups { get; set; }
        [InverseProperty(nameof(Quote.TierSapconditionGroup))]
        public virtual ICollection<Quote> QuoteTierSapconditionGroups { get; set; }
        [InverseProperty(nameof(SapshipTo.FreightIndicatorSapconditionGroup))]
        public virtual ICollection<SapshipTo> SapshipToFreightIndicatorSapconditionGroups { get; set; }
        [InverseProperty(nameof(SapshipTo.FuelSurchargeSapconditionGroup))]
        public virtual ICollection<SapshipTo> SapshipToFuelSurchargeSapconditionGroups { get; set; }
        [InverseProperty(nameof(SapsoldTo.HomeMillSapconditionGroup))]
        public virtual ICollection<SapsoldTo> SapsoldToHomeMillSapconditionGroups { get; set; }
        [InverseProperty(nameof(SapsoldTo.RegionSapconditionGroup))]
        public virtual ICollection<SapsoldTo> SapsoldToRegionSapconditionGroups { get; set; }
        [InverseProperty(nameof(SapsoldTo.TierSapconditionGroup))]
        public virtual ICollection<SapsoldTo> SapsoldToTierSapconditionGroups { get; set; }
    }
}