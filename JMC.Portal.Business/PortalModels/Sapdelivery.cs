// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("SAPDelivery")]
    [Microsoft.EntityFrameworkCore.Index(nameof(ActualGoodsMovementDate), nameof(Tmsdeldate), Name = "IDX_SAPDELIVERY_DELIVERED")]
    [Microsoft.EntityFrameworkCore.Index(nameof(DivisionId), nameof(PlantId), nameof(SapsoldToId), Name = "IDX_SAPDELIVERY_DIVPLANTSOLDTO")]
    [Microsoft.EntityFrameworkCore.Index(nameof(Number), nameof(DivisionId), Name = "IX_SAPDelivery", IsUnique = true)]
    [Microsoft.EntityFrameworkCore.Index(nameof(ActualGoodsMovementDate), Name = "IX_SAPDelivery_ActlGoodsMvmtDate")]
    [Microsoft.EntityFrameworkCore.Index(nameof(DivisionId), nameof(ActualGoodsMovementDate), nameof(SapsoldToId), Name = "missing_index_10_9_SAPDelivery")]
    public partial class Sapdelivery
    {
        public Sapdelivery()
        {
            SapdeliveryItems = new HashSet<SapdeliveryItem>();
        }

        [Key]
        [Column("SAPDeliveryID")]
        public long SapdeliveryId { get; set; }
        [Column("DivisionID")]
        public long DivisionId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? ActualGoodsMovementDate { get; set; }
        [StringLength(50)]
        public string Number { get; set; }
        [StringLength(50)]
        public string CreatedBy { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CreationDate { get; set; }
        [Column("PlantID")]
        public long? PlantId { get; set; }
        [Column("SAPSoldToID")]
        public long? SapsoldToId { get; set; }
        [Column(TypeName = "decimal(18, 4)")]
        public decimal? Weight { get; set; }
        [StringLength(3)]
        public string WeightUnit { get; set; }
        [Column("BAPIReturnMessage")]
        [StringLength(8000)]
        public string BapireturnMessage { get; set; }
        [Column(TypeName = "decimal(10, 0)")]
        public decimal? Distance { get; set; }
        [Column("DistanceUOM")]
        [StringLength(3)]
        public string DistanceUom { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? EstimatedCost { get; set; }
        [StringLength(10)]
        public string ShipmentNumber { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? AccessCharges { get; set; }
        [Column("FSC", TypeName = "decimal(13, 2)")]
        public decimal? Fsc { get; set; }
        [StringLength(4)]
        public string DeliveryType { get; set; }
        [Column("SAPShipmentID")]
        public long SapshipmentId { get; set; }
        public bool Transfer { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? FreightPaidToCarrier { get; set; }
        [StringLength(5)]
        public string CarrierFreightCurrency { get; set; }
        [Column("USDFreightPaidToCarrier", TypeName = "decimal(13, 2)")]
        public decimal? UsdfreightPaidToCarrier { get; set; }
        [Column("CarrierCADExchangeRateUsed", TypeName = "decimal(10, 4)")]
        public decimal? CarrierCadexchangeRateUsed { get; set; }
        [Column("SAPVendorID")]
        public long? SapvendorId { get; set; }
        [StringLength(50)]
        public string IncoTerms2 { get; set; }
        [Column("IPSActualWeight", TypeName = "decimal(18, 4)")]
        public decimal? IpsactualWeight { get; set; }
        [Column("IPSGotPaidWeight")]
        public bool? IpsgotPaidWeight { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? TransportationPlanningDate { get; set; }
        [Column("REQDELDate", TypeName = "datetime")]
        public DateTime? Reqdeldate { get; set; }
        [Column("TMSDELDate")]
        public DateTime? Tmsdeldate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? PickupAptDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CheckoutDate { get; set; }

        [ForeignKey(nameof(DivisionId))]
        [InverseProperty("Sapdeliveries")]
        public virtual Division Division { get; set; }
        [ForeignKey(nameof(PlantId))]
        [InverseProperty("Sapdeliveries")]
        public virtual Plant Plant { get; set; }
        [ForeignKey(nameof(SapshipmentId))]
        [InverseProperty("Sapdeliveries")]
        public virtual Sapshipment Sapshipment { get; set; }
        [ForeignKey(nameof(SapsoldToId))]
        [InverseProperty("Sapdeliveries")]
        public virtual SapsoldTo SapsoldTo { get; set; }
        [ForeignKey(nameof(SapvendorId))]
        [InverseProperty("Sapdeliveries")]
        public virtual Sapvendor Sapvendor { get; set; }
        [InverseProperty("Sapdelivery")]
        public virtual SapsalesDelivery SapsalesDelivery { get; set; }
        [InverseProperty("Sapdelivery")]
        public virtual SapscrapDelivery SapscrapDelivery { get; set; }
        [InverseProperty(nameof(SapdeliveryItem.Sapdelivery))]
        public virtual ICollection<SapdeliveryItem> SapdeliveryItems { get; set; }
    }
}