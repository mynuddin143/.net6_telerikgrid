// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("SAPSalesOrderItem")]
    [Microsoft.EntityFrameworkCore.Index(nameof(SapsalesOrderId), nameof(Position), nameof(SapshipToId), Name = "IX_SAPSalesOrderItem", IsUnique = true)]
    public partial class SapsalesOrderItem
    {
        public SapsalesOrderItem()
        {
            QuoteMaterials = new HashSet<QuoteMaterial>();
            SapdeliveryItems = new HashSet<SapdeliveryItem>();
            Sapstocks = new HashSet<Sapstock>();
            ShippingCartSapsalesOrderItems = new HashSet<ShippingCartSapsalesOrderItem>();
            Stocks = new HashSet<Stock>();
            WebReleasePlantSapsalesOrderItems = new HashSet<WebReleasePlantSapsalesOrderItem>();
        }

        [Key]
        [Column("SAPSalesOrderItemID")]
        public long SapsalesOrderItemId { get; set; }
        [Column("SAPSalesOrderID")]
        public long SapsalesOrderId { get; set; }
        [Column("SAPMaterialID")]
        public long SapmaterialId { get; set; }
        public int Position { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal Price { get; set; }
        [StringLength(50)]
        public string CustomerMaterialNumber { get; set; }
        [Column("SAPShipToID")]
        public long? SapshipToId { get; set; }
        [StringLength(40)]
        public string MaterialShortDescription { get; set; }
        [Column("PlantID")]
        public long? PlantId { get; set; }
        [StringLength(4)]
        public string RequirementsType { get; set; }
        [Column(TypeName = "date")]
        public DateTime? ReadyDate { get; set; }
        [Column(TypeName = "date")]
        public DateTime? MaterialStagingDate { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? OpenQuantity { get; set; }
        [StringLength(3)]
        public string BaseUnit { get; set; }
        [Column(TypeName = "date")]
        public DateTime? ScheduleLineDate { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? ScheduleOrderQuantity { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? ConfirmedQuantity { get; set; }
        [StringLength(3)]
        public string SalesUnit { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? GrossWeight { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? OrderQuantity { get; set; }
        [StringLength(4)]
        public string ItemCategory { get; set; }
        [StringLength(1)]
        public string DeliveryStatus { get; set; }
        public bool? Backlog { get; set; }
        public int? PiecesPerBundle { get; set; }
        public int? ReadyPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? ReadyWeight { get; set; }
        public int? NotReadyPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? NotReadyWeight { get; set; }
        public int? OpenPieces { get; set; }
        public int? DisplayReadyPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? DisplayReadyWeight { get; set; }
        public int? DisplayNotReadyPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? DisplayNotReadyWeight { get; set; }
        public int? DisplayReleasedPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? DisplayReleasedWeight { get; set; }
        public int? DisplayDeliveredPieces { get; set; }
        [Column(TypeName = "decimal(18, 3)")]
        public decimal? DisplayDeliveredWeight { get; set; }
        [Column(TypeName = "date")]
        public DateTime? RollDate { get; set; }
        [StringLength(10)]
        public string RejectionCode { get; set; }
        [StringLength(1)]
        public string RecordSource { get; set; }
        [Column("POLineNumber")]
        [StringLength(100)]
        public string PolineNumber { get; set; }
        public bool? DealIndicator { get; set; }

        [ForeignKey(nameof(PlantId))]
        [InverseProperty("SapsalesOrderItems")]
        public virtual Plant Plant { get; set; }
        [ForeignKey(nameof(SapmaterialId))]
        [InverseProperty("SapsalesOrderItems")]
        public virtual Sapmaterial Sapmaterial { get; set; }
        [ForeignKey(nameof(SapsalesOrderId))]
        [InverseProperty("SapsalesOrderItems")]
        public virtual SapsalesOrder SapsalesOrder { get; set; }
        [ForeignKey(nameof(SapshipToId))]
        [InverseProperty("SapsalesOrderItems")]
        public virtual SapshipTo SapshipTo { get; set; }
        [InverseProperty(nameof(QuoteMaterial.SapsalesOrderItem))]
        public virtual ICollection<QuoteMaterial> QuoteMaterials { get; set; }
        [InverseProperty(nameof(SapdeliveryItem.SapsalesOrderItem))]
        public virtual ICollection<SapdeliveryItem> SapdeliveryItems { get; set; }
        [InverseProperty(nameof(Sapstock.SapsalesOrderItem))]
        public virtual ICollection<Sapstock> Sapstocks { get; set; }
        [InverseProperty(nameof(ShippingCartSapsalesOrderItem.SapsalesOrderItem))]
        public virtual ICollection<ShippingCartSapsalesOrderItem> ShippingCartSapsalesOrderItems { get; set; }
        [InverseProperty(nameof(Stock.SapsalesOrderItem))]
        public virtual ICollection<Stock> Stocks { get; set; }
        [InverseProperty(nameof(WebReleasePlantSapsalesOrderItem.SapsalesOrderItem))]
        public virtual ICollection<WebReleasePlantSapsalesOrderItem> WebReleasePlantSapsalesOrderItems { get; set; }
    }
}