// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("SAPShipment")]
    [Microsoft.EntityFrameworkCore.Index(nameof(Number), nameof(DeliveryNumber), nameof(DivisionId), Name = "IX_SAPShipment", IsUnique = true)]
    [Microsoft.EntityFrameworkCore.Index(nameof(ActualGoodsMovementDate), Name = "IX_SAPShipment_ActGoodsMvmtDate")]
    public partial class Sapshipment
    {
        public Sapshipment()
        {
            Sapdeliveries = new HashSet<Sapdelivery>();
            ShipmentCosts = new HashSet<ShipmentCost>();
        }

        [Key]
        [Column("SAPShipmentID")]
        public long SapshipmentId { get; set; }
        [Column("DivisionID")]
        public long DivisionId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime ActualGoodsMovementDate { get; set; }
        [StringLength(50)]
        public string Number { get; set; }
        [Column("SAPDeliveryTypeID")]
        public long SapdeliveryTypeId { get; set; }
        [Column("PlantID")]
        public long? PlantId { get; set; }
        [Column("SAPSoldToID")]
        public long? SapsoldToId { get; set; }
        [Column("SAPVendorID")]
        public long? SapvendorId { get; set; }
        [Column("USDFreightPaidToCarrier", TypeName = "decimal(18, 4)")]
        public decimal? UsdfreightPaidToCarrier { get; set; }
        [Column("USDFreightChargedToCustomer", TypeName = "decimal(18, 4)")]
        public decimal? UsdfreightChargedToCustomer { get; set; }
        [Column(TypeName = "decimal(18, 4)")]
        public decimal? Distance { get; set; }
        [Column("DistanceUOM")]
        [StringLength(3)]
        public string DistanceUom { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? EstimatedCost { get; set; }
        [Column(TypeName = "decimal(13, 2)")]
        public decimal? AccessCharges { get; set; }
        [Column("FSC", TypeName = "decimal(13, 2)")]
        public decimal? Fsc { get; set; }
        [StringLength(50)]
        public string DeliveryNumber { get; set; }
        [Column("ProductLineID")]
        public long? ProductLineId { get; set; }
        [Column("DeliveryMethodID")]
        public long? DeliveryMethodId { get; set; }
        public bool? Excepted { get; set; }
        public bool AgentWarehouse { get; set; }
        public bool Scrap { get; set; }
        public bool Express { get; set; }
        public bool SpotRate { get; set; }
        [Column("IPSActualWeight", TypeName = "decimal(18, 4)")]
        public decimal? IpsactualWeight { get; set; }
        [Column("IPSCalculatedMiles", TypeName = "decimal(10, 0)")]
        public decimal? IpscalculatedMiles { get; set; }
        [Column("IPSLineHaul", TypeName = "decimal(13, 2)")]
        public decimal? IpslineHaul { get; set; }
        [Column("IPSFSC", TypeName = "decimal(13, 2)")]
        public decimal? Ipsfsc { get; set; }
        [Column("IPSTotalCost", TypeName = "decimal(13, 2)")]
        public decimal? IpstotalCost { get; set; }
        [Column("IPSOnly")]
        public bool? Ipsonly { get; set; }
        [Column("IPSPaidDate", TypeName = "datetime")]
        public DateTime? IpspaidDate { get; set; }
        [Column(TypeName = "decimal(18, 4)")]
        public decimal? Weight { get; set; }
        public bool Intermodal { get; set; }
        [Column("IPSGotPaidWeight")]
        public bool? IpsgotPaidWeight { get; set; }
        [Column("IPSGotPaidMiles")]
        public bool? IpsgotPaidMiles { get; set; }
        [Column("IPSAdditionalCharges", TypeName = "decimal(13, 2)")]
        public decimal? IpsadditionalCharges { get; set; }
        [Column("IPSException")]
        public bool? Ipsexception { get; set; }

        [ForeignKey(nameof(DeliveryMethodId))]
        [InverseProperty("Sapshipments")]
        public virtual DeliveryMethod DeliveryMethod { get; set; }
        [ForeignKey(nameof(DivisionId))]
        [InverseProperty("Sapshipments")]
        public virtual Division Division { get; set; }
        [ForeignKey(nameof(PlantId))]
        [InverseProperty("Sapshipments")]
        public virtual Plant Plant { get; set; }
        [ForeignKey(nameof(ProductLineId))]
        [InverseProperty("Sapshipments")]
        public virtual ProductLine ProductLine { get; set; }
        [ForeignKey(nameof(SapdeliveryTypeId))]
        [InverseProperty("Sapshipments")]
        public virtual SapdeliveryType SapdeliveryType { get; set; }
        [ForeignKey(nameof(SapsoldToId))]
        [InverseProperty("Sapshipments")]
        public virtual SapsoldTo SapsoldTo { get; set; }
        [ForeignKey(nameof(SapvendorId))]
        [InverseProperty("Sapshipments")]
        public virtual Sapvendor Sapvendor { get; set; }
        [InverseProperty(nameof(Sapdelivery.Sapshipment))]
        public virtual ICollection<Sapdelivery> Sapdeliveries { get; set; }
        [InverseProperty(nameof(ShipmentCost.Shipment))]
        public virtual ICollection<ShipmentCost> ShipmentCosts { get; set; }
    }
}