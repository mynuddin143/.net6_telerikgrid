// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("SAPSoldTo")]
    public partial class SapsoldTo
    {
        public SapsoldTo()
        {
            Cmirs = new HashSet<Cmir>();
            DealsBySoldToShipTos = new HashSet<DealsBySoldToShipTo>();
            PriceChangeRequests = new HashSet<PriceChangeRequest>();
            PriceSheetNotes = new HashSet<PriceSheetNote>();
            Quotes = new HashSet<Quote>();
            RandomLengthSapsoldTos = new HashSet<RandomLengthSapsoldTo>();
            Sapdeliveries = new HashSet<Sapdelivery>();
            SapsalesOrders = new HashSet<SapsalesOrder>();
            Sapshipments = new HashSet<Sapshipment>();
            SapsoldToPlantExclusions = new HashSet<SapsoldToPlantExclusion>();
            ScrapSapsoldTos = new HashSet<ScrapSapsoldTo>();
            Users = new HashSet<User>();
            Zr04s = new HashSet<Zr04>();
        }

        [Key]
        [Column("SAPShipToID")]
        public long SapshipToId { get; set; }
        [Column("DefaultSAPShipToID")]
        public long? DefaultSapshipToId { get; set; }
        public bool CustomerSpecificPricing { get; set; }
        [Column("RegionSAPConditionGroupID")]
        public long? RegionSapconditionGroupId { get; set; }
        [Column("TierSAPConditionGroupID")]
        public long? TierSapconditionGroupId { get; set; }
        [Column("HomeMillSAPConditionGroupID")]
        public long? HomeMillSapconditionGroupId { get; set; }
        [StringLength(2000)]
        public string PricingNotes { get; set; }
        [StringLength(1)]
        public string PricingProcedure { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastBacklogRefresh { get; set; }
        public bool? RefreshingBacklog { get; set; }
        [Column("OEM")]
        public bool Oem { get; set; }
        public short? PriceOption { get; set; }

        [ForeignKey(nameof(DefaultSapshipToId))]
        [InverseProperty("SapsoldToDefaultSapshipTos")]
        public virtual SapshipTo DefaultSapshipTo { get; set; }
        [ForeignKey(nameof(HomeMillSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.SapsoldToHomeMillSapconditionGroups))]
        public virtual SapconditionGroup HomeMillSapconditionGroup { get; set; }
        [ForeignKey(nameof(RegionSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.SapsoldToRegionSapconditionGroups))]
        public virtual SapconditionGroup RegionSapconditionGroup { get; set; }
        [ForeignKey(nameof(SapshipToId))]
        [InverseProperty("SapsoldToSapshipTo")]
        public virtual SapshipTo SapshipTo { get; set; }
        [ForeignKey(nameof(TierSapconditionGroupId))]
        [InverseProperty(nameof(SapconditionGroup.SapsoldToTierSapconditionGroups))]
        public virtual SapconditionGroup TierSapconditionGroup { get; set; }
        [InverseProperty(nameof(Cmir.SapshipTo))]
        public virtual ICollection<Cmir> Cmirs { get; set; }
        [InverseProperty(nameof(DealsBySoldToShipTo.SapsoldTo))]
        public virtual ICollection<DealsBySoldToShipTo> DealsBySoldToShipTos { get; set; }
        [InverseProperty(nameof(PriceChangeRequest.SapsoldTo))]
        public virtual ICollection<PriceChangeRequest> PriceChangeRequests { get; set; }
        [InverseProperty(nameof(PriceSheetNote.SapsoldTo))]
        public virtual ICollection<PriceSheetNote> PriceSheetNotes { get; set; }
        [InverseProperty(nameof(Quote.SapsoldTo))]
        public virtual ICollection<Quote> Quotes { get; set; }
        [InverseProperty(nameof(RandomLengthSapsoldTo.SapsoldTo))]
        public virtual ICollection<RandomLengthSapsoldTo> RandomLengthSapsoldTos { get; set; }
        [InverseProperty(nameof(Sapdelivery.SapsoldTo))]
        public virtual ICollection<Sapdelivery> Sapdeliveries { get; set; }
        [InverseProperty(nameof(SapsalesOrder.SapsoldTo))]
        public virtual ICollection<SapsalesOrder> SapsalesOrders { get; set; }
        [InverseProperty(nameof(Sapshipment.SapsoldTo))]
        public virtual ICollection<Sapshipment> Sapshipments { get; set; }
        [InverseProperty(nameof(SapsoldToPlantExclusion.SapshipTo))]
        public virtual ICollection<SapsoldToPlantExclusion> SapsoldToPlantExclusions { get; set; }
        [InverseProperty(nameof(ScrapSapsoldTo.SapsoldTo))]
        public virtual ICollection<ScrapSapsoldTo> ScrapSapsoldTos { get; set; }
        [InverseProperty(nameof(User.PrimarySapsoldTo))]
        public virtual ICollection<User> Users { get; set; }
        [InverseProperty(nameof(Zr04.Sapsoldto))]
        public virtual ICollection<Zr04> Zr04s { get; set; }
    }
}