// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace JMC.Portal.Business.PortalModels
{
    [Table("User")]
    [Microsoft.EntityFrameworkCore.Index(nameof(Email), Name = "IX_User")]
    public partial class User
    {
        public User()
        {
            Ipsfiles = new HashSet<Ipsfile>();
            LoginHistories = new HashSet<LoginHistory>();
            PriceChangeRequestItems = new HashSet<PriceChangeRequestItem>();
            PriceChangeRequests = new HashSet<PriceChangeRequest>();
            SapcustomerGroupRegionalManagerUsers = new HashSet<SapcustomerGroup>();
            SapcustomerGroupUsers = new HashSet<SapcustomerGroup>();
            SapcustomerGroupUsersNavigation = new HashSet<SapcustomerGroupUser>();
            SapcustomerServiceReps = new HashSet<SapcustomerServiceRep>();
            SapsalesGroupAlternateIsrNavigations = new HashSet<SapsalesGroup>();
            SapsalesGroupUsers = new HashSet<SapsalesGroup>();
            SapsalesOrders = new HashSet<SapsalesOrder>();
            ShippingCarts = new HashSet<ShippingCart>();
            ShoppingCarts = new HashSet<ShoppingCart>();
            UserProfiles = new HashSet<UserProfile>();
            UserSapshipToExclusions = new HashSet<UserSapshipToExclusion>();
            WebReleases = new HashSet<WebRelease>();
        }

        [Key]
        [Column("UserID")]
        public long UserId { get; set; }
        [Required]
        [StringLength(50)]
        public string LastName { get; set; }
        [Required]
        [StringLength(50)]
        public string FirstName { get; set; }
        [Required]
        [StringLength(128)]
        public string Password { get; set; }
        [Required]
        [StringLength(128)]
        public string PasswordSalt { get; set; }
        public bool PasswordReset { get; set; }
        [Required]
        [StringLength(100)]
        public string Email { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastLoginDate { get; set; }
        [Required]
        public bool? Active { get; set; }
        [StringLength(50)]
        public string PhoneNumber { get; set; }
        [StringLength(50)]
        public string FaxNumber { get; set; }
        [StringLength(50)]
        public string Extension { get; set; }
        [StringLength(50)]
        public string UserName { get; set; }
        [Column("PrimarySAPSoldToID")]
        public long? PrimarySapsoldToId { get; set; }

        [ForeignKey(nameof(PrimarySapsoldToId))]
        [InverseProperty(nameof(SapsoldTo.Users))]
        public virtual SapsoldTo PrimarySapsoldTo { get; set; }
        [InverseProperty("User")]
        public virtual Employee Employee { get; set; }
        [InverseProperty("User")]
        public virtual PlantComputer PlantComputer { get; set; }
        [InverseProperty(nameof(Ipsfile.User))]
        public virtual ICollection<Ipsfile> Ipsfiles { get; set; }
        [InverseProperty(nameof(LoginHistory.User))]
        public virtual ICollection<LoginHistory> LoginHistories { get; set; }
        [InverseProperty(nameof(PriceChangeRequestItem.ApprovedUser))]
        public virtual ICollection<PriceChangeRequestItem> PriceChangeRequestItems { get; set; }
        [InverseProperty(nameof(PriceChangeRequest.User))]
        public virtual ICollection<PriceChangeRequest> PriceChangeRequests { get; set; }
        [InverseProperty(nameof(SapcustomerGroup.RegionalManagerUser))]
        public virtual ICollection<SapcustomerGroup> SapcustomerGroupRegionalManagerUsers { get; set; }
        [InverseProperty(nameof(SapcustomerGroup.User))]
        public virtual ICollection<SapcustomerGroup> SapcustomerGroupUsers { get; set; }
        [InverseProperty(nameof(SapcustomerGroupUser.User))]
        public virtual ICollection<SapcustomerGroupUser> SapcustomerGroupUsersNavigation { get; set; }
        [InverseProperty(nameof(SapcustomerServiceRep.User))]
        public virtual ICollection<SapcustomerServiceRep> SapcustomerServiceReps { get; set; }
        [InverseProperty(nameof(SapsalesGroup.AlternateIsrNavigation))]
        public virtual ICollection<SapsalesGroup> SapsalesGroupAlternateIsrNavigations { get; set; }
        [InverseProperty(nameof(SapsalesGroup.User))]
        public virtual ICollection<SapsalesGroup> SapsalesGroupUsers { get; set; }
        [InverseProperty(nameof(SapsalesOrder.User))]
        public virtual ICollection<SapsalesOrder> SapsalesOrders { get; set; }
        [InverseProperty(nameof(ShippingCart.User))]
        public virtual ICollection<ShippingCart> ShippingCarts { get; set; }
        [InverseProperty(nameof(ShoppingCart.User))]
        public virtual ICollection<ShoppingCart> ShoppingCarts { get; set; }
        [InverseProperty(nameof(UserProfile.User))]
        public virtual ICollection<UserProfile> UserProfiles { get; set; }
        [InverseProperty(nameof(UserSapshipToExclusion.User))]
        public virtual ICollection<UserSapshipToExclusion> UserSapshipToExclusions { get; set; }
        [InverseProperty(nameof(WebRelease.User))]
        public virtual ICollection<WebRelease> WebReleases { get; set; }
    }
}